Section 30. k8s ConfigMaps and Secrets

- containers come pre-configured
- not very flexible
- most common way to introduce additional variables
  - use "env" variables
  - sometimes if these are all the same - lots of copy-pasted text
  - how ?

- 123. Creating a ConfigMap
  - accomplished via a ConfigMap
  - another YAML file/entry {see database-config.yaml}
  - kubectl apply -f YAML
  - kubectl get cm / describe

- 124. Consuming a ConfigMap as Environment Variables
  - {WORST WAY} change names in pod defs to be VAR NAMES
    - special syntax, additional fields, need to reference ConfigMap to look up actual values
    - has to be done for each env var IN EACH POD DEF
      - GOOD in that the names are only defined in 1 place - but have to be duped in each POD DEF
      - workloads0.yaml : COULDN'T GET THIS TO WORK {see below error}
        - couldn't read data

- 125. Do changes to a ConfigMap propogate ?
  - as of 2019 - changed vals do NOT propogate when changed / applied
  - ONLY WAY to pick up new change - "bounce" the pod, ie delete
    - if taking this approach, make new cfg files & update references ALL OVER THE PLACE - YUCK

- 126. How to consume multiple environment variables with envFrom
  - workloads_envfrom.yaml & db-cfg-v4 works
  Restart Count:  0
Environment Variables from:
  global-database-config-v3  ConfigMap  Optional: false
Environment:
  SPRING_PROFILES_ACTIVE:  production-microservice
Mounts:

bobzawislak (main *) 30_k8s_ConfigMaps_and_Secrets $ kubectl exec -it position-simulator-77ff7f6b87-n9nnz  bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
root@position-simulator-77ff7f6b87-n9nnz:/# echo $DATABASE_URL
https://mysqlserver.somewhere.com:3306
root@position-simulator-77ff7f6b87-n9nnz:/# echo $DATABASE_PASSWORD
P@SSW0rd1
root@position-simulator-77ff7f6b87-n9nnz:/#


- 127. Mounting ConfigMaps as Volumes
  - in pod yaml
        volumeMounts:
        - name: db-cfg-volume
          mountPath: /etc/any/cfg
      volumes:
      - name: db-cfg-volume
        configMap:
          name: global-database-config-v4

        bobzawislak (main *) 30_k8s_ConfigMaps_and_Secrets $ kubectl exec -it position-simulator-59d7cdd4b7-4s76p  bash
      kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
      root@position-simulator-59d7cdd4b7-4s76p:/# cd /etc
      root@position-simulator-59d7cdd4b7-4s76p:/etc# cd any
      root@position-simulator-59d7cdd4b7-4s76p:/etc/any# ls -al
      total 12
      drwxr-xr-x 3 root root 4096 Oct 24 16:18 .
      drwxr-xr-x 1 root root 4096 Oct 24 16:18 ..
      drwxrwxrwx 3 root root 4096 Oct 24 16:18 cfg
      root@position-simulator-59d7cdd4b7-4s76p:/etc/any# cd cfg
      root@position-simulator-59d7cdd4b7-4s76p:/etc/any/cfg# ls -al
      total 12
      drwxrwxrwx 3 root root 4096 Oct 24 16:18 .
      drwxr-xr-x 3 root root 4096 Oct 24 16:18 ..
      drwxr-xr-x 2 root root 4096 Oct 24 16:18 ..2020_10_24_16_18_08.397951798
      lrwxrwxrwx 1 root root   31 Oct 24 16:18 ..data -> ..2020_10_24_16_18_08.397951798
      lrwxrwxrwx 1 root root   24 Oct 24 16:18 DATABASE_PASSWORD -> ..data/DATABASE_PASSWORD
      lrwxrwxrwx 1 root root   19 Oct 24 16:18 DATABASE_URL -> ..data/DATABASE_URL

- 128. Creating Secrets
- 129. Using Secrets
  - store & manage "sensitive information", eg passwords, OAuth tokens, keys
  - safer & more flexible than in an image
  - when using 'stringData' tag :
      kubectl describe secret aws-credentials

      Name:         aws-credentials
      Namespace:    default
      Labels:       <none>
      Annotations:  <none>

      Type:  Opaque

      Data
      ====
      accessKey:  11 bytes
      secretKey:  10 bytes

  - values are ENCODED NOT ENCRYPTED
  - get secrets output -o yaml to get encoded strings
    - run thru base64 cmd line to encode / decode
  - SysAdmins can limit / permit access to ConfigMaps / Secrets

- 130. Where have we already used ConfigMaps & Secrets ?
  - ELK Chapter
    "L" - LogStash/FluentD
    - elasticStack.yaml file
      - mountPath : /etc/fluent/config.d
    - uses a ConfigMap to create a file called system.conf on the file system
      - files created dynamically
    - can use this approach to "tune / tweak" anything
  - AlertManager chapter
    - some of the yaml sections created these

- 131. extra - Using Spring Cloud k8s to hot reload ConfigMaps
  - just watched


COMMANDS
[ec2-user@ip-172-31-42-64 dev]$ kubectl apply -f db-cfg.yaml
configmap/global-database-config-v4 created

[ec2-user@ip-172-31-42-64 dev]$ kubectl get cm
NAME                        DATA   AGE
global-database-config-v4   1      14s

[ec2-user@ip-172-31-42-64 dev]$ kubectl describe cm global-database-config-v4
Name:         global-database-config-v4
Namespace:    default
Labels:       <none>
Annotations:  kubectl.kubernetes.io/last-applied-configuration:
                {"apiVersion":"v1","data":{"database.properties":"database.url=https://mydatabaseserver.somewhere.com:3306\ndatabase.password=P@SSW0rd1\n"...

Data
====
database.properties:
----
database.url=https://mydatabaseserver.somewhere.com:3306
database.password=P@SSW0rd1

Events:  <none>

[ec2-user@ip-172-31-42-64 dev]$
bobzawislak (main *) 30_k8s_ConfigMaps_and_Secrets $ kubectl get cm
NAME                     DATA   AGE
global-database-config   1      6s
bobzawislak (main *) 30_k8s_ConfigMaps_and_Secrets $ kubectl describe cm global-database-config
Name:         global-database-config
Namespace:    default
Labels:       <none>
Annotations:  <none>

Data
====
database.properties:
----
database.url=https://mysqlserver.somewhere.com:3306
database.password=P@SSW0rd1

Events:
  Type     Reason     Age               From               Message
  ----     ------     ----              ----               -------
  Normal   Scheduled  61s               default-scheduler  Successfully assigned default/position-simulator-667f87fc55-8bwdl to minikube
  Normal   Pulled     7s (x7 over 60s)  kubelet            Container image "richardchesterwood/k8s-fleetman-position-simulator:release1" already present on machine
  Warning  Failed     7s (x7 over 60s)  kubelet            Error: couldn't find key database.url in ConfigMap default/global-database-config
